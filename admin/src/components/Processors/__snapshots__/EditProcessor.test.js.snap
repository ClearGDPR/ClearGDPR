// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(Component) Edit Processor form should render correctly when no props provided 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <React.Fragment>
        <label
          htmlFor="name"
        >
          Name:
        </label>
        <ConnectedField
          field="name"
          id="name"
        />
        <label
          htmlFor="description"
        >
          Description:
        </label>
        <ConnectedField
          field="description"
          id="description"
        />
        <label
          htmlFor="logoUrl"
        >
          Logo URL:
        </label>
        <ConnectedField
          field="logoUrl"
          id="logoUrl"
        />
        <label>
          Scopes:
        </label>
        <ConnectedField
          field="scope[Full Name]"
        />
        <ConnectedField
          field="scope[Email]"
        />
        <ConnectedField
          field="scope[Phone Number]"
        />
        <button
          className="btn"
          type="submit"
        >
          Submit
        </button>
      </React.Fragment>,
      "onSubmit": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <label
            htmlFor="name"
          >
            Name:
          </label>,
          <ConnectedField
            field="name"
            id="name"
          />,
          <label
            htmlFor="description"
          >
            Description:
          </label>,
          <ConnectedField
            field="description"
            id="description"
          />,
          <label
            htmlFor="logoUrl"
          >
            Logo URL:
          </label>,
          <ConnectedField
            field="logoUrl"
            id="logoUrl"
          />,
          <label>
            Scopes:
          </label>,
          Array [
            <ConnectedField
              field="scope[Full Name]"
            />,
            <ConnectedField
              field="scope[Email]"
            />,
            <ConnectedField
              field="scope[Phone Number]"
            />,
          ],
          <button
            className="btn"
            type="submit"
          >
            Submit
          </button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Name:",
            "htmlFor": "name",
          },
          "ref": null,
          "rendered": "Name:",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "field": "name",
            "id": "name",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Description:",
            "htmlFor": "description",
          },
          "ref": null,
          "rendered": "Description:",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "field": "description",
            "id": "description",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Logo URL:",
            "htmlFor": "logoUrl",
          },
          "ref": null,
          "rendered": "Logo URL:",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "field": "logoUrl",
            "id": "logoUrl",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Scopes:",
          },
          "ref": null,
          "rendered": "Scopes:",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "function",
          "props": Object {
            "field": "scope[Full Name]",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "function",
          "props": Object {
            "field": "scope[Email]",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "function",
          "props": Object {
            "field": "scope[Phone Number]",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Submit",
            "className": "btn",
            "type": "submit",
          },
          "ref": null,
          "rendered": "Submit",
          "type": "button",
        },
      ],
      "type": Symbol(react.fragment),
    },
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <React.Fragment>
          <label
            htmlFor="name"
          >
            Name:
          </label>
          <ConnectedField
            field="name"
            id="name"
          />
          <label
            htmlFor="description"
          >
            Description:
          </label>
          <ConnectedField
            field="description"
            id="description"
          />
          <label
            htmlFor="logoUrl"
          >
            Logo URL:
          </label>
          <ConnectedField
            field="logoUrl"
            id="logoUrl"
          />
          <label>
            Scopes:
          </label>
          <ConnectedField
            field="scope[Full Name]"
          />
          <ConnectedField
            field="scope[Email]"
          />
          <ConnectedField
            field="scope[Phone Number]"
          />
          <button
            className="btn"
            type="submit"
          >
            Submit
          </button>
        </React.Fragment>,
        "onSubmit": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <label
              htmlFor="name"
            >
              Name:
            </label>,
            <ConnectedField
              field="name"
              id="name"
            />,
            <label
              htmlFor="description"
            >
              Description:
            </label>,
            <ConnectedField
              field="description"
              id="description"
            />,
            <label
              htmlFor="logoUrl"
            >
              Logo URL:
            </label>,
            <ConnectedField
              field="logoUrl"
              id="logoUrl"
            />,
            <label>
              Scopes:
            </label>,
            Array [
              <ConnectedField
                field="scope[Full Name]"
              />,
              <ConnectedField
                field="scope[Email]"
              />,
              <ConnectedField
                field="scope[Phone Number]"
              />,
            ],
            <button
              className="btn"
              type="submit"
            >
              Submit
            </button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Name:",
              "htmlFor": "name",
            },
            "ref": null,
            "rendered": "Name:",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "field": "name",
              "id": "name",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Description:",
              "htmlFor": "description",
            },
            "ref": null,
            "rendered": "Description:",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "field": "description",
              "id": "description",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Logo URL:",
              "htmlFor": "logoUrl",
            },
            "ref": null,
            "rendered": "Logo URL:",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "field": "logoUrl",
              "id": "logoUrl",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Scopes:",
            },
            "ref": null,
            "rendered": "Scopes:",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "function",
            "props": Object {
              "field": "scope[Full Name]",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "function",
            "props": Object {
              "field": "scope[Email]",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "function",
            "props": Object {
              "field": "scope[Phone Number]",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Submit",
              "className": "btn",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Submit",
            "type": "button",
          },
        ],
        "type": Symbol(react.fragment),
      },
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`(Component) Edit Processor form should render correctly when the prop isLoading is set to false 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    isLoading={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <React.Fragment>
        <label
          htmlFor="name"
        >
          Name:
        </label>
        <ConnectedField
          field="name"
          id="name"
        />
        <label
          htmlFor="description"
        >
          Description:
        </label>
        <ConnectedField
          field="description"
          id="description"
        />
        <label
          htmlFor="logoUrl"
        >
          Logo URL:
        </label>
        <ConnectedField
          field="logoUrl"
          id="logoUrl"
        />
        <label>
          Scopes:
        </label>
        <ConnectedField
          field="scope[Full Name]"
        />
        <ConnectedField
          field="scope[Email]"
        />
        <ConnectedField
          field="scope[Phone Number]"
        />
        <button
          className="btn"
          type="submit"
        >
          Submit
        </button>
      </React.Fragment>,
      "onSubmit": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <label
            htmlFor="name"
          >
            Name:
          </label>,
          <ConnectedField
            field="name"
            id="name"
          />,
          <label
            htmlFor="description"
          >
            Description:
          </label>,
          <ConnectedField
            field="description"
            id="description"
          />,
          <label
            htmlFor="logoUrl"
          >
            Logo URL:
          </label>,
          <ConnectedField
            field="logoUrl"
            id="logoUrl"
          />,
          <label>
            Scopes:
          </label>,
          Array [
            <ConnectedField
              field="scope[Full Name]"
            />,
            <ConnectedField
              field="scope[Email]"
            />,
            <ConnectedField
              field="scope[Phone Number]"
            />,
          ],
          <button
            className="btn"
            type="submit"
          >
            Submit
          </button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Name:",
            "htmlFor": "name",
          },
          "ref": null,
          "rendered": "Name:",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "field": "name",
            "id": "name",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Description:",
            "htmlFor": "description",
          },
          "ref": null,
          "rendered": "Description:",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "field": "description",
            "id": "description",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Logo URL:",
            "htmlFor": "logoUrl",
          },
          "ref": null,
          "rendered": "Logo URL:",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "field": "logoUrl",
            "id": "logoUrl",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Scopes:",
          },
          "ref": null,
          "rendered": "Scopes:",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "function",
          "props": Object {
            "field": "scope[Full Name]",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "function",
          "props": Object {
            "field": "scope[Email]",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "function",
          "props": Object {
            "field": "scope[Phone Number]",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Submit",
            "className": "btn",
            "type": "submit",
          },
          "ref": null,
          "rendered": "Submit",
          "type": "button",
        },
      ],
      "type": Symbol(react.fragment),
    },
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <React.Fragment>
          <label
            htmlFor="name"
          >
            Name:
          </label>
          <ConnectedField
            field="name"
            id="name"
          />
          <label
            htmlFor="description"
          >
            Description:
          </label>
          <ConnectedField
            field="description"
            id="description"
          />
          <label
            htmlFor="logoUrl"
          >
            Logo URL:
          </label>
          <ConnectedField
            field="logoUrl"
            id="logoUrl"
          />
          <label>
            Scopes:
          </label>
          <ConnectedField
            field="scope[Full Name]"
          />
          <ConnectedField
            field="scope[Email]"
          />
          <ConnectedField
            field="scope[Phone Number]"
          />
          <button
            className="btn"
            type="submit"
          >
            Submit
          </button>
        </React.Fragment>,
        "onSubmit": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <label
              htmlFor="name"
            >
              Name:
            </label>,
            <ConnectedField
              field="name"
              id="name"
            />,
            <label
              htmlFor="description"
            >
              Description:
            </label>,
            <ConnectedField
              field="description"
              id="description"
            />,
            <label
              htmlFor="logoUrl"
            >
              Logo URL:
            </label>,
            <ConnectedField
              field="logoUrl"
              id="logoUrl"
            />,
            <label>
              Scopes:
            </label>,
            Array [
              <ConnectedField
                field="scope[Full Name]"
              />,
              <ConnectedField
                field="scope[Email]"
              />,
              <ConnectedField
                field="scope[Phone Number]"
              />,
            ],
            <button
              className="btn"
              type="submit"
            >
              Submit
            </button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Name:",
              "htmlFor": "name",
            },
            "ref": null,
            "rendered": "Name:",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "field": "name",
              "id": "name",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Description:",
              "htmlFor": "description",
            },
            "ref": null,
            "rendered": "Description:",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "field": "description",
              "id": "description",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Logo URL:",
              "htmlFor": "logoUrl",
            },
            "ref": null,
            "rendered": "Logo URL:",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "field": "logoUrl",
              "id": "logoUrl",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Scopes:",
            },
            "ref": null,
            "rendered": "Scopes:",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "function",
            "props": Object {
              "field": "scope[Full Name]",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "function",
            "props": Object {
              "field": "scope[Email]",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "function",
            "props": Object {
              "field": "scope[Phone Number]",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Submit",
              "className": "btn",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Submit",
            "type": "button",
          },
        ],
        "type": Symbol(react.fragment),
      },
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`(Component) Edit Processor form should render correctly when the prop isLoading is set to true 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    isLoading={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Loader />,
      "onSubmit": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Loader />,
        "onSubmit": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
