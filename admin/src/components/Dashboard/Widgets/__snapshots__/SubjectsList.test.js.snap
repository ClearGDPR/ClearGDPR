// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(Component) SubjectList should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SubjectsList
    errorState={false}
    isLoading={false}
    subjects={
      Array [
        Object {
          "consented_on": "2018-07-04T18:33:43.534Z",
          "data": Object {
            "email": "test@test.com",
            "firstname": "test",
          },
          "id": "0x0",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <TableCard
        header={
          Array [
            "id",
            "firstname",
            "email",
            "consented_on",
          ]
        }
        rows={
          Array [
            Object {
              "consented_on": "Invalid Date",
              "email": "test@test.com",
              "firstname": "test",
              "id": "0x0",
            },
          ]
        }
        title="Subjects"
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "header": Array [
          "id",
          "firstname",
          "email",
          "consented_on",
        ],
        "rows": Array [
          Object {
            "consented_on": "Invalid Date",
            "email": "test@test.com",
            "firstname": "test",
            "id": "0x0",
          },
        ],
        "title": "Subjects",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <TableCard
          header={
            Array [
              "id",
              "firstname",
              "email",
              "consented_on",
            ]
          }
          rows={
            Array [
              Object {
                "consented_on": "Invalid Date",
                "email": "test@test.com",
                "firstname": "test",
                "id": "0x0",
              },
            ]
          }
          title="Subjects"
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "header": Array [
            "id",
            "firstname",
            "email",
            "consented_on",
          ],
          "rows": Array [
            Object {
              "consented_on": "Invalid Date",
              "email": "test@test.com",
              "firstname": "test",
              "id": "0x0",
            },
          ],
          "title": "Subjects",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`(Component) SubjectList should render if loading 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SubjectsList
    errorState={false}
    isLoading={false}
    loading={true}
    subjects={
      Array [
        Object {
          "consented_on": "2018-07-04T18:33:43.534Z",
          "data": Object {
            "email": "test@test.com",
            "firstname": "test",
          },
          "id": "0x0",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <TableCard
        header={
          Array [
            "id",
            "firstname",
            "email",
            "consented_on",
          ]
        }
        rows={
          Array [
            Object {
              "consented_on": "Invalid Date",
              "email": "test@test.com",
              "firstname": "test",
              "id": "0x0",
            },
          ]
        }
        title="Subjects"
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "header": Array [
          "id",
          "firstname",
          "email",
          "consented_on",
        ],
        "rows": Array [
          Object {
            "consented_on": "Invalid Date",
            "email": "test@test.com",
            "firstname": "test",
            "id": "0x0",
          },
        ],
        "title": "Subjects",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <TableCard
          header={
            Array [
              "id",
              "firstname",
              "email",
              "consented_on",
            ]
          }
          rows={
            Array [
              Object {
                "consented_on": "Invalid Date",
                "email": "test@test.com",
                "firstname": "test",
                "id": "0x0",
              },
            ]
          }
          title="Subjects"
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "header": Array [
            "id",
            "firstname",
            "email",
            "consented_on",
          ],
          "rows": Array [
            Object {
              "consented_on": "Invalid Date",
              "email": "test@test.com",
              "firstname": "test",
              "id": "0x0",
            },
          ],
          "title": "Subjects",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
