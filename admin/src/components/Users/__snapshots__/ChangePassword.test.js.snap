// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(Component) Change Password should render correctly when no props provided 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ChangePassword />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <React.Fragment>
        <TextInput
          field="newPassword"
          label="New password"
          placeholder="*********"
          type="password"
          validate={[Function]}
        />
        <TextInput
          field="newPasswordRepeat"
          label="Repeat new password"
          placeholder="*********"
          type="password"
          validate={[Function]}
        />
        <div>
          <input
            className="btn"
            type="submit"
            value="Save"
          />
        </div>
      </React.Fragment>,
      "onSubmit": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <TextInput
            field="newPassword"
            label="New password"
            placeholder="*********"
            type="password"
            validate={[Function]}
          />,
          <TextInput
            field="newPasswordRepeat"
            label="Repeat new password"
            placeholder="*********"
            type="password"
            validate={[Function]}
          />,
          <div>
            <input
              className="btn"
              type="submit"
              value="Save"
            />
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "error": undefined,
            "field": "newPassword",
            "label": "New password",
            "placeholder": "*********",
            "type": "password",
            "validate": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "error": undefined,
            "field": "newPasswordRepeat",
            "label": "Repeat new password",
            "placeholder": "*********",
            "type": "password",
            "validate": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              className="btn"
              type="submit"
              value="Save"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "btn",
              "type": "submit",
              "value": "Save",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <React.Fragment>
          <TextInput
            field="newPassword"
            label="New password"
            placeholder="*********"
            type="password"
            validate={[Function]}
          />
          <TextInput
            field="newPasswordRepeat"
            label="Repeat new password"
            placeholder="*********"
            type="password"
            validate={[Function]}
          />
          <div>
            <input
              className="btn"
              type="submit"
              value="Save"
            />
          </div>
        </React.Fragment>,
        "onSubmit": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <TextInput
              field="newPassword"
              label="New password"
              placeholder="*********"
              type="password"
              validate={[Function]}
            />,
            <TextInput
              field="newPasswordRepeat"
              label="Repeat new password"
              placeholder="*********"
              type="password"
              validate={[Function]}
            />,
            <div>
              <input
                className="btn"
                type="submit"
                value="Save"
              />
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "error": undefined,
              "field": "newPassword",
              "label": "New password",
              "placeholder": "*********",
              "type": "password",
              "validate": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "error": undefined,
              "field": "newPasswordRepeat",
              "label": "Repeat new password",
              "placeholder": "*********",
              "type": "password",
              "validate": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                className="btn"
                type="submit"
                value="Save"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "btn",
                "type": "submit",
                "value": "Save",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
        ],
        "type": Symbol(react.fragment),
      },
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`(Component) Change Password should render correctly when the prop isLoading is set to false 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ChangePassword
    isLoading={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <React.Fragment>
        <TextInput
          field="newPassword"
          label="New password"
          placeholder="*********"
          type="password"
          validate={[Function]}
        />
        <TextInput
          field="newPasswordRepeat"
          label="Repeat new password"
          placeholder="*********"
          type="password"
          validate={[Function]}
        />
        <div>
          <input
            className="btn"
            type="submit"
            value="Save"
          />
        </div>
      </React.Fragment>,
      "onSubmit": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <TextInput
            field="newPassword"
            label="New password"
            placeholder="*********"
            type="password"
            validate={[Function]}
          />,
          <TextInput
            field="newPasswordRepeat"
            label="Repeat new password"
            placeholder="*********"
            type="password"
            validate={[Function]}
          />,
          <div>
            <input
              className="btn"
              type="submit"
              value="Save"
            />
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "error": undefined,
            "field": "newPassword",
            "label": "New password",
            "placeholder": "*********",
            "type": "password",
            "validate": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "error": undefined,
            "field": "newPasswordRepeat",
            "label": "Repeat new password",
            "placeholder": "*********",
            "type": "password",
            "validate": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              className="btn"
              type="submit"
              value="Save"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "btn",
              "type": "submit",
              "value": "Save",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <React.Fragment>
          <TextInput
            field="newPassword"
            label="New password"
            placeholder="*********"
            type="password"
            validate={[Function]}
          />
          <TextInput
            field="newPasswordRepeat"
            label="Repeat new password"
            placeholder="*********"
            type="password"
            validate={[Function]}
          />
          <div>
            <input
              className="btn"
              type="submit"
              value="Save"
            />
          </div>
        </React.Fragment>,
        "onSubmit": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <TextInput
              field="newPassword"
              label="New password"
              placeholder="*********"
              type="password"
              validate={[Function]}
            />,
            <TextInput
              field="newPasswordRepeat"
              label="Repeat new password"
              placeholder="*********"
              type="password"
              validate={[Function]}
            />,
            <div>
              <input
                className="btn"
                type="submit"
                value="Save"
              />
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "error": undefined,
              "field": "newPassword",
              "label": "New password",
              "placeholder": "*********",
              "type": "password",
              "validate": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "error": undefined,
              "field": "newPasswordRepeat",
              "label": "Repeat new password",
              "placeholder": "*********",
              "type": "password",
              "validate": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                className="btn"
                type="submit"
                value="Save"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "btn",
                "type": "submit",
                "value": "Save",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
        ],
        "type": Symbol(react.fragment),
      },
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`(Component) Change Password should render correctly when the prop isLoading is set to true 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ChangePassword
    isLoading={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Loader />,
      "onSubmit": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Loader />,
        "onSubmit": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
