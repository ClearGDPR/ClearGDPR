// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(Component) Rectifications should render when loading correctly 1`] = `
Object {
  "component": ShallowWrapper {
    "length": 1,
    Symbol(enzyme.__root__): [Circular],
    Symbol(enzyme.__unrendered__): <Rectifications
      currentPage={1}
      data={
        Array [
          Object {
            "created_at": "02/07/2018 9:31pm",
            "id": 4,
            "request_reason": "The data was incorrect.",
            "status": "APPROVED",
          },
          Object {
            "created_at": "02/07/2018 9:35pm",
            "id": 5,
            "request_reason": "The data was incorrect two.",
            "status": "DISAPPROVED",
          },
          Object {
            "created_at": "02/07/2018 9:31pm",
            "id": 6,
            "request_reason": "The data was incorrect two three.",
            "status": "APPROVED",
          },
        ]
      }
      isLoading={true}
      onDetailsClick={[MockFunction]}
      onPageSelected={[MockFunction]}
      onTabSelect={[MockFunction]}
      pageCount={2}
      selectedTab={0}
      tabs={
        Array [
          "tab 1",
          "tab 2",
        ]
      }
    />,
    Symbol(enzyme.__renderer__): Object {
      "batchedUpdates": [Function],
      "getNode": [Function],
      "render": [Function],
      "simulateEvent": [Function],
      "unmount": [Function],
    },
    Symbol(enzyme.__node__): Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ActionBar
            desc="Here you can manage requests from users who want to execute their right to rectify the data stored about them."
            title="Rectification requests"
          />,
          <Tabs
            defaultFocus={false}
            defaultIndex={null}
            forceRenderTabPanel={false}
            onSelect={[MockFunction]}
            selectedIndex={0}
          >
            <TabList
              className="react-tabs__tab-list"
            >
              <Tab
                className="react-tabs__tab"
                disabledClassName="react-tabs__tab--disabled"
                focus={false}
                id={null}
                panelId={null}
                selected={false}
                selectedClassName="react-tabs__tab--selected"
              >
                tab 1
              </Tab>
              <Tab
                className="react-tabs__tab"
                disabledClassName="react-tabs__tab--disabled"
                focus={false}
                id={null}
                panelId={null}
                selected={false}
                selectedClassName="react-tabs__tab--selected"
              >
                tab 2
              </Tab>
            </TabList>
            <TabPanel
              className="react-tabs__tab-panel"
              forceRender={false}
              selectedClassName="react-tabs__tab-panel--selected"
            >
              <div
                className="row"
              >
                <Card
                  cols={8}
                >
                  <div
                    className="content"
                  >
                    <Loader />
                  </div>
                </Card>
              </div>
            </TabPanel>
            <TabPanel
              className="react-tabs__tab-panel"
              forceRender={false}
              selectedClassName="react-tabs__tab-panel--selected"
            >
              <div
                className="row"
              >
                <Card
                  cols={8}
                >
                  <div
                    className="content"
                  >
                    <Loader />
                  </div>
                </Card>
              </div>
            </TabPanel>
          </Tabs>,
        ],
        "className": "cards",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "desc": "Here you can manage requests from users who want to execute their right to rectify the data stored about them.",
            "title": "Rectification requests",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <TabList
                className="react-tabs__tab-list"
              >
                <Tab
                  className="react-tabs__tab"
                  disabledClassName="react-tabs__tab--disabled"
                  focus={false}
                  id={null}
                  panelId={null}
                  selected={false}
                  selectedClassName="react-tabs__tab--selected"
                >
                  tab 1
                </Tab>
                <Tab
                  className="react-tabs__tab"
                  disabledClassName="react-tabs__tab--disabled"
                  focus={false}
                  id={null}
                  panelId={null}
                  selected={false}
                  selectedClassName="react-tabs__tab--selected"
                >
                  tab 2
                </Tab>
              </TabList>,
              <TabPanel
                className="react-tabs__tab-panel"
                forceRender={false}
                selectedClassName="react-tabs__tab-panel--selected"
              >
                <div
                  className="row"
                >
                  <Card
                    cols={8}
                  >
                    <div
                      className="content"
                    >
                      <Loader />
                    </div>
                  </Card>
                </div>
              </TabPanel>,
              <TabPanel
                className="react-tabs__tab-panel"
                forceRender={false}
                selectedClassName="react-tabs__tab-panel--selected"
              >
                <div
                  className="row"
                >
                  <Card
                    cols={8}
                  >
                    <div
                      className="content"
                    >
                      <Loader />
                    </div>
                  </Card>
                </div>
              </TabPanel>,
            ],
            "defaultFocus": false,
            "defaultIndex": null,
            "forceRenderTabPanel": false,
            "onSelect": [MockFunction],
            "selectedIndex": 0,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Tab
                    className="react-tabs__tab"
                    disabledClassName="react-tabs__tab--disabled"
                    focus={false}
                    id={null}
                    panelId={null}
                    selected={false}
                    selectedClassName="react-tabs__tab--selected"
                  >
                    tab 1
                  </Tab>,
                  <Tab
                    className="react-tabs__tab"
                    disabledClassName="react-tabs__tab--disabled"
                    focus={false}
                    id={null}
                    panelId={null}
                    selected={false}
                    selectedClassName="react-tabs__tab--selected"
                  >
                    tab 2
                  </Tab>,
                ],
                "className": "react-tabs__tab-list",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "class",
                  "props": Object {
                    "children": "tab 1",
                    "className": "react-tabs__tab",
                    "disabledClassName": "react-tabs__tab--disabled",
                    "focus": false,
                    "id": null,
                    "panelId": null,
                    "selected": false,
                    "selectedClassName": "react-tabs__tab--selected",
                  },
                  "ref": null,
                  "rendered": "tab 1",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "children": "tab 2",
                    "className": "react-tabs__tab",
                    "disabledClassName": "react-tabs__tab--disabled",
                    "focus": false,
                    "id": null,
                    "panelId": null,
                    "selected": false,
                    "selectedClassName": "react-tabs__tab--selected",
                  },
                  "ref": null,
                  "rendered": "tab 2",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <div
                  className="row"
                >
                  <Card
                    cols={8}
                  >
                    <div
                      className="content"
                    >
                      <Loader />
                    </div>
                  </Card>
                </div>,
                "className": "react-tabs__tab-panel",
                "forceRender": false,
                "selectedClassName": "react-tabs__tab-panel--selected",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Card
                    cols={8}
                  >
                    <div
                      className="content"
                    >
                      <Loader />
                    </div>
                  </Card>,
                  "className": "row",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <div
                      className="content"
                    >
                      <Loader />
                    </div>,
                    "cols": 8,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Loader />,
                      "className": "content",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  "type": [Function],
                },
                "type": "div",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <div
                  className="row"
                >
                  <Card
                    cols={8}
                  >
                    <div
                      className="content"
                    >
                      <Loader />
                    </div>
                  </Card>
                </div>,
                "className": "react-tabs__tab-panel",
                "forceRender": false,
                "selectedClassName": "react-tabs__tab-panel--selected",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Card
                    cols={8}
                  >
                    <div
                      className="content"
                    >
                      <Loader />
                    </div>
                  </Card>,
                  "className": "row",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <div
                      className="content"
                    >
                      <Loader />
                    </div>,
                    "cols": 8,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Loader />,
                      "className": "content",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  "type": [Function],
                },
                "type": "div",
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "section",
    },
    Symbol(enzyme.__nodes__): Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ActionBar
              desc="Here you can manage requests from users who want to execute their right to rectify the data stored about them."
              title="Rectification requests"
            />,
            <Tabs
              defaultFocus={false}
              defaultIndex={null}
              forceRenderTabPanel={false}
              onSelect={[MockFunction]}
              selectedIndex={0}
            >
              <TabList
                className="react-tabs__tab-list"
              >
                <Tab
                  className="react-tabs__tab"
                  disabledClassName="react-tabs__tab--disabled"
                  focus={false}
                  id={null}
                  panelId={null}
                  selected={false}
                  selectedClassName="react-tabs__tab--selected"
                >
                  tab 1
                </Tab>
                <Tab
                  className="react-tabs__tab"
                  disabledClassName="react-tabs__tab--disabled"
                  focus={false}
                  id={null}
                  panelId={null}
                  selected={false}
                  selectedClassName="react-tabs__tab--selected"
                >
                  tab 2
                </Tab>
              </TabList>
              <TabPanel
                className="react-tabs__tab-panel"
                forceRender={false}
                selectedClassName="react-tabs__tab-panel--selected"
              >
                <div
                  className="row"
                >
                  <Card
                    cols={8}
                  >
                    <div
                      className="content"
                    >
                      <Loader />
                    </div>
                  </Card>
                </div>
              </TabPanel>
              <TabPanel
                className="react-tabs__tab-panel"
                forceRender={false}
                selectedClassName="react-tabs__tab-panel--selected"
              >
                <div
                  className="row"
                >
                  <Card
                    cols={8}
                  >
                    <div
                      className="content"
                    >
                      <Loader />
                    </div>
                  </Card>
                </div>
              </TabPanel>
            </Tabs>,
          ],
          "className": "cards",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "desc": "Here you can manage requests from users who want to execute their right to rectify the data stored about them.",
              "title": "Rectification requests",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <TabList
                  className="react-tabs__tab-list"
                >
                  <Tab
                    className="react-tabs__tab"
                    disabledClassName="react-tabs__tab--disabled"
                    focus={false}
                    id={null}
                    panelId={null}
                    selected={false}
                    selectedClassName="react-tabs__tab--selected"
                  >
                    tab 1
                  </Tab>
                  <Tab
                    className="react-tabs__tab"
                    disabledClassName="react-tabs__tab--disabled"
                    focus={false}
                    id={null}
                    panelId={null}
                    selected={false}
                    selectedClassName="react-tabs__tab--selected"
                  >
                    tab 2
                  </Tab>
                </TabList>,
                <TabPanel
                  className="react-tabs__tab-panel"
                  forceRender={false}
                  selectedClassName="react-tabs__tab-panel--selected"
                >
                  <div
                    className="row"
                  >
                    <Card
                      cols={8}
                    >
                      <div
                        className="content"
                      >
                        <Loader />
                      </div>
                    </Card>
                  </div>
                </TabPanel>,
                <TabPanel
                  className="react-tabs__tab-panel"
                  forceRender={false}
                  selectedClassName="react-tabs__tab-panel--selected"
                >
                  <div
                    className="row"
                  >
                    <Card
                      cols={8}
                    >
                      <div
                        className="content"
                      >
                        <Loader />
                      </div>
                    </Card>
                  </div>
                </TabPanel>,
              ],
              "defaultFocus": false,
              "defaultIndex": null,
              "forceRenderTabPanel": false,
              "onSelect": [MockFunction],
              "selectedIndex": 0,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Tab
                      className="react-tabs__tab"
                      disabledClassName="react-tabs__tab--disabled"
                      focus={false}
                      id={null}
                      panelId={null}
                      selected={false}
                      selectedClassName="react-tabs__tab--selected"
                    >
                      tab 1
                    </Tab>,
                    <Tab
                      className="react-tabs__tab"
                      disabledClassName="react-tabs__tab--disabled"
                      focus={false}
                      id={null}
                      panelId={null}
                      selected={false}
                      selectedClassName="react-tabs__tab--selected"
                    >
                      tab 2
                    </Tab>,
                  ],
                  "className": "react-tabs__tab-list",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0",
                    "nodeType": "class",
                    "props": Object {
                      "children": "tab 1",
                      "className": "react-tabs__tab",
                      "disabledClassName": "react-tabs__tab--disabled",
                      "focus": false,
                      "id": null,
                      "panelId": null,
                      "selected": false,
                      "selectedClassName": "react-tabs__tab--selected",
                    },
                    "ref": null,
                    "rendered": "tab 1",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "1",
                    "nodeType": "class",
                    "props": Object {
                      "children": "tab 2",
                      "className": "react-tabs__tab",
                      "disabledClassName": "react-tabs__tab--disabled",
                      "focus": false,
                      "id": null,
                      "panelId": null,
                      "selected": false,
                      "selectedClassName": "react-tabs__tab--selected",
                    },
                    "ref": null,
                    "rendered": "tab 2",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <div
                    className="row"
                  >
                    <Card
                      cols={8}
                    >
                      <div
                        className="content"
                      >
                        <Loader />
                      </div>
                    </Card>
                  </div>,
                  "className": "react-tabs__tab-panel",
                  "forceRender": false,
                  "selectedClassName": "react-tabs__tab-panel--selected",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Card
                      cols={8}
                    >
                      <div
                        className="content"
                      >
                        <Loader />
                      </div>
                    </Card>,
                    "className": "row",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <div
                        className="content"
                      >
                        <Loader />
                      </div>,
                      "cols": 8,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Loader />,
                        "className": "content",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  "type": "div",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <div
                    className="row"
                  >
                    <Card
                      cols={8}
                    >
                      <div
                        className="content"
                      >
                        <Loader />
                      </div>
                    </Card>
                  </div>,
                  "className": "react-tabs__tab-panel",
                  "forceRender": false,
                  "selectedClassName": "react-tabs__tab-panel--selected",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Card
                      cols={8}
                    >
                      <div
                        className="content"
                      >
                        <Loader />
                      </div>
                    </Card>,
                    "className": "row",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <div
                        className="content"
                      >
                        <Loader />
                      </div>,
                      "cols": 8,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Loader />,
                        "className": "content",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  "type": "div",
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "section",
      },
    ],
    Symbol(enzyme.__options__): Object {
      "adapter": ReactSixteenAdapter {
        "options": Object {
          "enableComponentDidUpdateOnSetState": true,
        },
      },
    },
  },
  "props": Object {
    "currentPage": 1,
    "data": Array [
      Object {
        "created_at": "02/07/2018 9:31pm",
        "id": 4,
        "request_reason": "The data was incorrect.",
        "status": "APPROVED",
      },
      Object {
        "created_at": "02/07/2018 9:35pm",
        "id": 5,
        "request_reason": "The data was incorrect two.",
        "status": "DISAPPROVED",
      },
      Object {
        "created_at": "02/07/2018 9:31pm",
        "id": 6,
        "request_reason": "The data was incorrect two three.",
        "status": "APPROVED",
      },
    ],
    "isLoading": true,
    "onDetailsClick": [MockFunction],
    "onPageSelected": [MockFunction],
    "onTabSelect": [MockFunction],
    "pageCount": 2,
    "selectedTab": 0,
    "tabs": Array [
      "tab 1",
      "tab 2",
    ],
  },
}
`;

exports[`(Component) Rectifications should render when not loading correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Rectifications
    currentPage={1}
    data={
      Array [
        Object {
          "created_at": "02/07/2018 9:31pm",
          "id": 4,
          "request_reason": "The data was incorrect.",
          "status": "APPROVED",
        },
        Object {
          "created_at": "02/07/2018 9:35pm",
          "id": 5,
          "request_reason": "The data was incorrect two.",
          "status": "DISAPPROVED",
        },
        Object {
          "created_at": "02/07/2018 9:31pm",
          "id": 6,
          "request_reason": "The data was incorrect two three.",
          "status": "APPROVED",
        },
      ]
    }
    isLoading={false}
    onDetailsClick={[MockFunction]}
    onPageSelected={[MockFunction]}
    onTabSelect={[MockFunction]}
    pageCount={2}
    selectedTab={0}
    tabs={
      Array [
        "tab 1",
        "tab 2",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <ActionBar
          desc="Here you can manage requests from users who want to execute their right to rectify the data stored about them."
          title="Rectification requests"
        />,
        <Tabs
          defaultFocus={false}
          defaultIndex={null}
          forceRenderTabPanel={false}
          onSelect={[MockFunction]}
          selectedIndex={0}
        >
          <TabList
            className="react-tabs__tab-list"
          >
            <Tab
              className="react-tabs__tab"
              disabledClassName="react-tabs__tab--disabled"
              focus={false}
              id={null}
              panelId={null}
              selected={false}
              selectedClassName="react-tabs__tab--selected"
            >
              tab 1
            </Tab>
            <Tab
              className="react-tabs__tab"
              disabledClassName="react-tabs__tab--disabled"
              focus={false}
              id={null}
              panelId={null}
              selected={false}
              selectedClassName="react-tabs__tab--selected"
            >
              tab 2
            </Tab>
          </TabList>
          <TabPanel
            className="react-tabs__tab-panel"
            forceRender={false}
            selectedClassName="react-tabs__tab-panel--selected"
          >
            <div
              className="row"
            >
              <Card
                cols={8}
              >
                <React.Fragment>
                  <div
                    className="content"
                  >
                    <Table
                      actions={
                        Array [
                          Object {
                            "label": "Details",
                            "onClick": [Function],
                          },
                        ]
                      }
                      columns={
                        Object {
                          "created_at": Object {
                            "title": "Created at",
                          },
                          "id": Object {
                            "title": "ID",
                          },
                          "request_reason": Object {
                            "title": "Reason",
                          },
                          "status": Object {
                            "filter": [Function],
                            "title": "Status",
                          },
                        }
                      }
                      rows={
                        Array [
                          Object {
                            "created_at": "02/07/2018 9:31pm",
                            "id": 4,
                            "request_reason": "The data was incorrect.",
                            "status": "APPROVED",
                          },
                          Object {
                            "created_at": "02/07/2018 9:35pm",
                            "id": 5,
                            "request_reason": "The data was incorrect two.",
                            "status": "DISAPPROVED",
                          },
                          Object {
                            "created_at": "02/07/2018 9:31pm",
                            "id": 6,
                            "request_reason": "The data was incorrect two three.",
                            "status": "APPROVED",
                          },
                        ]
                      }
                    />
                  </div>
                  <div
                    className="content"
                  >
                    <Paginate
                      disableInitialCallback={true}
                      initialPage={0}
                      onPageChange={[Function]}
                      pageCount={2}
                    />
                  </div>
                </React.Fragment>
              </Card>
            </div>
          </TabPanel>
          <TabPanel
            className="react-tabs__tab-panel"
            forceRender={false}
            selectedClassName="react-tabs__tab-panel--selected"
          >
            <div
              className="row"
            >
              <Card
                cols={8}
              >
                <React.Fragment>
                  <div
                    className="content"
                  >
                    <Table
                      actions={
                        Array [
                          Object {
                            "label": "Details",
                            "onClick": [Function],
                          },
                        ]
                      }
                      columns={
                        Object {
                          "created_at": Object {
                            "title": "Created at",
                          },
                          "id": Object {
                            "title": "ID",
                          },
                          "request_reason": Object {
                            "title": "Reason",
                          },
                          "status": Object {
                            "filter": [Function],
                            "title": "Status",
                          },
                        }
                      }
                      rows={
                        Array [
                          Object {
                            "created_at": "02/07/2018 9:31pm",
                            "id": 4,
                            "request_reason": "The data was incorrect.",
                            "status": "APPROVED",
                          },
                          Object {
                            "created_at": "02/07/2018 9:35pm",
                            "id": 5,
                            "request_reason": "The data was incorrect two.",
                            "status": "DISAPPROVED",
                          },
                          Object {
                            "created_at": "02/07/2018 9:31pm",
                            "id": 6,
                            "request_reason": "The data was incorrect two three.",
                            "status": "APPROVED",
                          },
                        ]
                      }
                    />
                  </div>
                  <div
                    className="content"
                  >
                    <Paginate
                      disableInitialCallback={true}
                      initialPage={0}
                      onPageChange={[Function]}
                      pageCount={2}
                    />
                  </div>
                </React.Fragment>
              </Card>
            </div>
          </TabPanel>
        </Tabs>,
      ],
      "className": "cards",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "desc": "Here you can manage requests from users who want to execute their right to rectify the data stored about them.",
          "title": "Rectification requests",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <TabList
              className="react-tabs__tab-list"
            >
              <Tab
                className="react-tabs__tab"
                disabledClassName="react-tabs__tab--disabled"
                focus={false}
                id={null}
                panelId={null}
                selected={false}
                selectedClassName="react-tabs__tab--selected"
              >
                tab 1
              </Tab>
              <Tab
                className="react-tabs__tab"
                disabledClassName="react-tabs__tab--disabled"
                focus={false}
                id={null}
                panelId={null}
                selected={false}
                selectedClassName="react-tabs__tab--selected"
              >
                tab 2
              </Tab>
            </TabList>,
            <TabPanel
              className="react-tabs__tab-panel"
              forceRender={false}
              selectedClassName="react-tabs__tab-panel--selected"
            >
              <div
                className="row"
              >
                <Card
                  cols={8}
                >
                  <React.Fragment>
                    <div
                      className="content"
                    >
                      <Table
                        actions={
                          Array [
                            Object {
                              "label": "Details",
                              "onClick": [Function],
                            },
                          ]
                        }
                        columns={
                          Object {
                            "created_at": Object {
                              "title": "Created at",
                            },
                            "id": Object {
                              "title": "ID",
                            },
                            "request_reason": Object {
                              "title": "Reason",
                            },
                            "status": Object {
                              "filter": [Function],
                              "title": "Status",
                            },
                          }
                        }
                        rows={
                          Array [
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 4,
                              "request_reason": "The data was incorrect.",
                              "status": "APPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:35pm",
                              "id": 5,
                              "request_reason": "The data was incorrect two.",
                              "status": "DISAPPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 6,
                              "request_reason": "The data was incorrect two three.",
                              "status": "APPROVED",
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="content"
                    >
                      <Paginate
                        disableInitialCallback={true}
                        initialPage={0}
                        onPageChange={[Function]}
                        pageCount={2}
                      />
                    </div>
                  </React.Fragment>
                </Card>
              </div>
            </TabPanel>,
            <TabPanel
              className="react-tabs__tab-panel"
              forceRender={false}
              selectedClassName="react-tabs__tab-panel--selected"
            >
              <div
                className="row"
              >
                <Card
                  cols={8}
                >
                  <React.Fragment>
                    <div
                      className="content"
                    >
                      <Table
                        actions={
                          Array [
                            Object {
                              "label": "Details",
                              "onClick": [Function],
                            },
                          ]
                        }
                        columns={
                          Object {
                            "created_at": Object {
                              "title": "Created at",
                            },
                            "id": Object {
                              "title": "ID",
                            },
                            "request_reason": Object {
                              "title": "Reason",
                            },
                            "status": Object {
                              "filter": [Function],
                              "title": "Status",
                            },
                          }
                        }
                        rows={
                          Array [
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 4,
                              "request_reason": "The data was incorrect.",
                              "status": "APPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:35pm",
                              "id": 5,
                              "request_reason": "The data was incorrect two.",
                              "status": "DISAPPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 6,
                              "request_reason": "The data was incorrect two three.",
                              "status": "APPROVED",
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="content"
                    >
                      <Paginate
                        disableInitialCallback={true}
                        initialPage={0}
                        onPageChange={[Function]}
                        pageCount={2}
                      />
                    </div>
                  </React.Fragment>
                </Card>
              </div>
            </TabPanel>,
          ],
          "defaultFocus": false,
          "defaultIndex": null,
          "forceRenderTabPanel": false,
          "onSelect": [MockFunction],
          "selectedIndex": 0,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Tab
                  className="react-tabs__tab"
                  disabledClassName="react-tabs__tab--disabled"
                  focus={false}
                  id={null}
                  panelId={null}
                  selected={false}
                  selectedClassName="react-tabs__tab--selected"
                >
                  tab 1
                </Tab>,
                <Tab
                  className="react-tabs__tab"
                  disabledClassName="react-tabs__tab--disabled"
                  focus={false}
                  id={null}
                  panelId={null}
                  selected={false}
                  selectedClassName="react-tabs__tab--selected"
                >
                  tab 2
                </Tab>,
              ],
              "className": "react-tabs__tab-list",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "class",
                "props": Object {
                  "children": "tab 1",
                  "className": "react-tabs__tab",
                  "disabledClassName": "react-tabs__tab--disabled",
                  "focus": false,
                  "id": null,
                  "panelId": null,
                  "selected": false,
                  "selectedClassName": "react-tabs__tab--selected",
                },
                "ref": null,
                "rendered": "tab 1",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "children": "tab 2",
                  "className": "react-tabs__tab",
                  "disabledClassName": "react-tabs__tab--disabled",
                  "focus": false,
                  "id": null,
                  "panelId": null,
                  "selected": false,
                  "selectedClassName": "react-tabs__tab--selected",
                },
                "ref": null,
                "rendered": "tab 2",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <div
                className="row"
              >
                <Card
                  cols={8}
                >
                  <React.Fragment>
                    <div
                      className="content"
                    >
                      <Table
                        actions={
                          Array [
                            Object {
                              "label": "Details",
                              "onClick": [Function],
                            },
                          ]
                        }
                        columns={
                          Object {
                            "created_at": Object {
                              "title": "Created at",
                            },
                            "id": Object {
                              "title": "ID",
                            },
                            "request_reason": Object {
                              "title": "Reason",
                            },
                            "status": Object {
                              "filter": [Function],
                              "title": "Status",
                            },
                          }
                        }
                        rows={
                          Array [
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 4,
                              "request_reason": "The data was incorrect.",
                              "status": "APPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:35pm",
                              "id": 5,
                              "request_reason": "The data was incorrect two.",
                              "status": "DISAPPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 6,
                              "request_reason": "The data was incorrect two three.",
                              "status": "APPROVED",
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="content"
                    >
                      <Paginate
                        disableInitialCallback={true}
                        initialPage={0}
                        onPageChange={[Function]}
                        pageCount={2}
                      />
                    </div>
                  </React.Fragment>
                </Card>
              </div>,
              "className": "react-tabs__tab-panel",
              "forceRender": false,
              "selectedClassName": "react-tabs__tab-panel--selected",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Card
                  cols={8}
                >
                  <React.Fragment>
                    <div
                      className="content"
                    >
                      <Table
                        actions={
                          Array [
                            Object {
                              "label": "Details",
                              "onClick": [Function],
                            },
                          ]
                        }
                        columns={
                          Object {
                            "created_at": Object {
                              "title": "Created at",
                            },
                            "id": Object {
                              "title": "ID",
                            },
                            "request_reason": Object {
                              "title": "Reason",
                            },
                            "status": Object {
                              "filter": [Function],
                              "title": "Status",
                            },
                          }
                        }
                        rows={
                          Array [
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 4,
                              "request_reason": "The data was incorrect.",
                              "status": "APPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:35pm",
                              "id": 5,
                              "request_reason": "The data was incorrect two.",
                              "status": "DISAPPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 6,
                              "request_reason": "The data was incorrect two three.",
                              "status": "APPROVED",
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="content"
                    >
                      <Paginate
                        disableInitialCallback={true}
                        initialPage={0}
                        onPageChange={[Function]}
                        pageCount={2}
                      />
                    </div>
                  </React.Fragment>
                </Card>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <React.Fragment>
                    <div
                      className="content"
                    >
                      <Table
                        actions={
                          Array [
                            Object {
                              "label": "Details",
                              "onClick": [Function],
                            },
                          ]
                        }
                        columns={
                          Object {
                            "created_at": Object {
                              "title": "Created at",
                            },
                            "id": Object {
                              "title": "ID",
                            },
                            "request_reason": Object {
                              "title": "Reason",
                            },
                            "status": Object {
                              "filter": [Function],
                              "title": "Status",
                            },
                          }
                        }
                        rows={
                          Array [
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 4,
                              "request_reason": "The data was incorrect.",
                              "status": "APPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:35pm",
                              "id": 5,
                              "request_reason": "The data was incorrect two.",
                              "status": "DISAPPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 6,
                              "request_reason": "The data was incorrect two three.",
                              "status": "APPROVED",
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="content"
                    >
                      <Paginate
                        disableInitialCallback={true}
                        initialPage={0}
                        onPageChange={[Function]}
                        pageCount={2}
                      />
                    </div>
                  </React.Fragment>,
                  "cols": 8,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <div
                        className="content"
                      >
                        <Table
                          actions={
                            Array [
                              Object {
                                "label": "Details",
                                "onClick": [Function],
                              },
                            ]
                          }
                          columns={
                            Object {
                              "created_at": Object {
                                "title": "Created at",
                              },
                              "id": Object {
                                "title": "ID",
                              },
                              "request_reason": Object {
                                "title": "Reason",
                              },
                              "status": Object {
                                "filter": [Function],
                                "title": "Status",
                              },
                            }
                          }
                          rows={
                            Array [
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 4,
                                "request_reason": "The data was incorrect.",
                                "status": "APPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:35pm",
                                "id": 5,
                                "request_reason": "The data was incorrect two.",
                                "status": "DISAPPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 6,
                                "request_reason": "The data was incorrect two three.",
                                "status": "APPROVED",
                              },
                            ]
                          }
                        />
                      </div>,
                      <div
                        className="content"
                      >
                        <Paginate
                          disableInitialCallback={true}
                          initialPage={0}
                          onPageChange={[Function]}
                          pageCount={2}
                        />
                      </div>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Table
                          actions={
                            Array [
                              Object {
                                "label": "Details",
                                "onClick": [Function],
                              },
                            ]
                          }
                          columns={
                            Object {
                              "created_at": Object {
                                "title": "Created at",
                              },
                              "id": Object {
                                "title": "ID",
                              },
                              "request_reason": Object {
                                "title": "Reason",
                              },
                              "status": Object {
                                "filter": [Function],
                                "title": "Status",
                              },
                            }
                          }
                          rows={
                            Array [
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 4,
                                "request_reason": "The data was incorrect.",
                                "status": "APPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:35pm",
                                "id": 5,
                                "request_reason": "The data was incorrect two.",
                                "status": "DISAPPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 6,
                                "request_reason": "The data was incorrect two three.",
                                "status": "APPROVED",
                              },
                            ]
                          }
                        />,
                        "className": "content",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "actions": Array [
                            Object {
                              "label": "Details",
                              "onClick": [Function],
                            },
                          ],
                          "columns": Object {
                            "created_at": Object {
                              "title": "Created at",
                            },
                            "id": Object {
                              "title": "ID",
                            },
                            "request_reason": Object {
                              "title": "Reason",
                            },
                            "status": Object {
                              "filter": [Function],
                              "title": "Status",
                            },
                          },
                          "rows": Array [
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 4,
                              "request_reason": "The data was incorrect.",
                              "status": "APPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:35pm",
                              "id": 5,
                              "request_reason": "The data was incorrect two.",
                              "status": "DISAPPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 6,
                              "request_reason": "The data was incorrect two three.",
                              "status": "APPROVED",
                            },
                          ],
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Paginate
                          disableInitialCallback={true}
                          initialPage={0}
                          onPageChange={[Function]}
                          pageCount={2}
                        />,
                        "className": "content",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "disableInitialCallback": true,
                          "initialPage": 0,
                          "onPageChange": [Function],
                          "pageCount": 2,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                  ],
                  "type": Symbol(react.fragment),
                },
                "type": [Function],
              },
              "type": "div",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <div
                className="row"
              >
                <Card
                  cols={8}
                >
                  <React.Fragment>
                    <div
                      className="content"
                    >
                      <Table
                        actions={
                          Array [
                            Object {
                              "label": "Details",
                              "onClick": [Function],
                            },
                          ]
                        }
                        columns={
                          Object {
                            "created_at": Object {
                              "title": "Created at",
                            },
                            "id": Object {
                              "title": "ID",
                            },
                            "request_reason": Object {
                              "title": "Reason",
                            },
                            "status": Object {
                              "filter": [Function],
                              "title": "Status",
                            },
                          }
                        }
                        rows={
                          Array [
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 4,
                              "request_reason": "The data was incorrect.",
                              "status": "APPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:35pm",
                              "id": 5,
                              "request_reason": "The data was incorrect two.",
                              "status": "DISAPPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 6,
                              "request_reason": "The data was incorrect two three.",
                              "status": "APPROVED",
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="content"
                    >
                      <Paginate
                        disableInitialCallback={true}
                        initialPage={0}
                        onPageChange={[Function]}
                        pageCount={2}
                      />
                    </div>
                  </React.Fragment>
                </Card>
              </div>,
              "className": "react-tabs__tab-panel",
              "forceRender": false,
              "selectedClassName": "react-tabs__tab-panel--selected",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Card
                  cols={8}
                >
                  <React.Fragment>
                    <div
                      className="content"
                    >
                      <Table
                        actions={
                          Array [
                            Object {
                              "label": "Details",
                              "onClick": [Function],
                            },
                          ]
                        }
                        columns={
                          Object {
                            "created_at": Object {
                              "title": "Created at",
                            },
                            "id": Object {
                              "title": "ID",
                            },
                            "request_reason": Object {
                              "title": "Reason",
                            },
                            "status": Object {
                              "filter": [Function],
                              "title": "Status",
                            },
                          }
                        }
                        rows={
                          Array [
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 4,
                              "request_reason": "The data was incorrect.",
                              "status": "APPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:35pm",
                              "id": 5,
                              "request_reason": "The data was incorrect two.",
                              "status": "DISAPPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 6,
                              "request_reason": "The data was incorrect two three.",
                              "status": "APPROVED",
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="content"
                    >
                      <Paginate
                        disableInitialCallback={true}
                        initialPage={0}
                        onPageChange={[Function]}
                        pageCount={2}
                      />
                    </div>
                  </React.Fragment>
                </Card>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <React.Fragment>
                    <div
                      className="content"
                    >
                      <Table
                        actions={
                          Array [
                            Object {
                              "label": "Details",
                              "onClick": [Function],
                            },
                          ]
                        }
                        columns={
                          Object {
                            "created_at": Object {
                              "title": "Created at",
                            },
                            "id": Object {
                              "title": "ID",
                            },
                            "request_reason": Object {
                              "title": "Reason",
                            },
                            "status": Object {
                              "filter": [Function],
                              "title": "Status",
                            },
                          }
                        }
                        rows={
                          Array [
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 4,
                              "request_reason": "The data was incorrect.",
                              "status": "APPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:35pm",
                              "id": 5,
                              "request_reason": "The data was incorrect two.",
                              "status": "DISAPPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 6,
                              "request_reason": "The data was incorrect two three.",
                              "status": "APPROVED",
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="content"
                    >
                      <Paginate
                        disableInitialCallback={true}
                        initialPage={0}
                        onPageChange={[Function]}
                        pageCount={2}
                      />
                    </div>
                  </React.Fragment>,
                  "cols": 8,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <div
                        className="content"
                      >
                        <Table
                          actions={
                            Array [
                              Object {
                                "label": "Details",
                                "onClick": [Function],
                              },
                            ]
                          }
                          columns={
                            Object {
                              "created_at": Object {
                                "title": "Created at",
                              },
                              "id": Object {
                                "title": "ID",
                              },
                              "request_reason": Object {
                                "title": "Reason",
                              },
                              "status": Object {
                                "filter": [Function],
                                "title": "Status",
                              },
                            }
                          }
                          rows={
                            Array [
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 4,
                                "request_reason": "The data was incorrect.",
                                "status": "APPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:35pm",
                                "id": 5,
                                "request_reason": "The data was incorrect two.",
                                "status": "DISAPPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 6,
                                "request_reason": "The data was incorrect two three.",
                                "status": "APPROVED",
                              },
                            ]
                          }
                        />
                      </div>,
                      <div
                        className="content"
                      >
                        <Paginate
                          disableInitialCallback={true}
                          initialPage={0}
                          onPageChange={[Function]}
                          pageCount={2}
                        />
                      </div>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Table
                          actions={
                            Array [
                              Object {
                                "label": "Details",
                                "onClick": [Function],
                              },
                            ]
                          }
                          columns={
                            Object {
                              "created_at": Object {
                                "title": "Created at",
                              },
                              "id": Object {
                                "title": "ID",
                              },
                              "request_reason": Object {
                                "title": "Reason",
                              },
                              "status": Object {
                                "filter": [Function],
                                "title": "Status",
                              },
                            }
                          }
                          rows={
                            Array [
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 4,
                                "request_reason": "The data was incorrect.",
                                "status": "APPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:35pm",
                                "id": 5,
                                "request_reason": "The data was incorrect two.",
                                "status": "DISAPPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 6,
                                "request_reason": "The data was incorrect two three.",
                                "status": "APPROVED",
                              },
                            ]
                          }
                        />,
                        "className": "content",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "actions": Array [
                            Object {
                              "label": "Details",
                              "onClick": [Function],
                            },
                          ],
                          "columns": Object {
                            "created_at": Object {
                              "title": "Created at",
                            },
                            "id": Object {
                              "title": "ID",
                            },
                            "request_reason": Object {
                              "title": "Reason",
                            },
                            "status": Object {
                              "filter": [Function],
                              "title": "Status",
                            },
                          },
                          "rows": Array [
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 4,
                              "request_reason": "The data was incorrect.",
                              "status": "APPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:35pm",
                              "id": 5,
                              "request_reason": "The data was incorrect two.",
                              "status": "DISAPPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 6,
                              "request_reason": "The data was incorrect two three.",
                              "status": "APPROVED",
                            },
                          ],
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Paginate
                          disableInitialCallback={true}
                          initialPage={0}
                          onPageChange={[Function]}
                          pageCount={2}
                        />,
                        "className": "content",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "disableInitialCallback": true,
                          "initialPage": 0,
                          "onPageChange": [Function],
                          "pageCount": 2,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                  ],
                  "type": Symbol(react.fragment),
                },
                "type": [Function],
              },
              "type": "div",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ActionBar
            desc="Here you can manage requests from users who want to execute their right to rectify the data stored about them."
            title="Rectification requests"
          />,
          <Tabs
            defaultFocus={false}
            defaultIndex={null}
            forceRenderTabPanel={false}
            onSelect={[MockFunction]}
            selectedIndex={0}
          >
            <TabList
              className="react-tabs__tab-list"
            >
              <Tab
                className="react-tabs__tab"
                disabledClassName="react-tabs__tab--disabled"
                focus={false}
                id={null}
                panelId={null}
                selected={false}
                selectedClassName="react-tabs__tab--selected"
              >
                tab 1
              </Tab>
              <Tab
                className="react-tabs__tab"
                disabledClassName="react-tabs__tab--disabled"
                focus={false}
                id={null}
                panelId={null}
                selected={false}
                selectedClassName="react-tabs__tab--selected"
              >
                tab 2
              </Tab>
            </TabList>
            <TabPanel
              className="react-tabs__tab-panel"
              forceRender={false}
              selectedClassName="react-tabs__tab-panel--selected"
            >
              <div
                className="row"
              >
                <Card
                  cols={8}
                >
                  <React.Fragment>
                    <div
                      className="content"
                    >
                      <Table
                        actions={
                          Array [
                            Object {
                              "label": "Details",
                              "onClick": [Function],
                            },
                          ]
                        }
                        columns={
                          Object {
                            "created_at": Object {
                              "title": "Created at",
                            },
                            "id": Object {
                              "title": "ID",
                            },
                            "request_reason": Object {
                              "title": "Reason",
                            },
                            "status": Object {
                              "filter": [Function],
                              "title": "Status",
                            },
                          }
                        }
                        rows={
                          Array [
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 4,
                              "request_reason": "The data was incorrect.",
                              "status": "APPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:35pm",
                              "id": 5,
                              "request_reason": "The data was incorrect two.",
                              "status": "DISAPPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 6,
                              "request_reason": "The data was incorrect two three.",
                              "status": "APPROVED",
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="content"
                    >
                      <Paginate
                        disableInitialCallback={true}
                        initialPage={0}
                        onPageChange={[Function]}
                        pageCount={2}
                      />
                    </div>
                  </React.Fragment>
                </Card>
              </div>
            </TabPanel>
            <TabPanel
              className="react-tabs__tab-panel"
              forceRender={false}
              selectedClassName="react-tabs__tab-panel--selected"
            >
              <div
                className="row"
              >
                <Card
                  cols={8}
                >
                  <React.Fragment>
                    <div
                      className="content"
                    >
                      <Table
                        actions={
                          Array [
                            Object {
                              "label": "Details",
                              "onClick": [Function],
                            },
                          ]
                        }
                        columns={
                          Object {
                            "created_at": Object {
                              "title": "Created at",
                            },
                            "id": Object {
                              "title": "ID",
                            },
                            "request_reason": Object {
                              "title": "Reason",
                            },
                            "status": Object {
                              "filter": [Function],
                              "title": "Status",
                            },
                          }
                        }
                        rows={
                          Array [
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 4,
                              "request_reason": "The data was incorrect.",
                              "status": "APPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:35pm",
                              "id": 5,
                              "request_reason": "The data was incorrect two.",
                              "status": "DISAPPROVED",
                            },
                            Object {
                              "created_at": "02/07/2018 9:31pm",
                              "id": 6,
                              "request_reason": "The data was incorrect two three.",
                              "status": "APPROVED",
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="content"
                    >
                      <Paginate
                        disableInitialCallback={true}
                        initialPage={0}
                        onPageChange={[Function]}
                        pageCount={2}
                      />
                    </div>
                  </React.Fragment>
                </Card>
              </div>
            </TabPanel>
          </Tabs>,
        ],
        "className": "cards",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "desc": "Here you can manage requests from users who want to execute their right to rectify the data stored about them.",
            "title": "Rectification requests",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <TabList
                className="react-tabs__tab-list"
              >
                <Tab
                  className="react-tabs__tab"
                  disabledClassName="react-tabs__tab--disabled"
                  focus={false}
                  id={null}
                  panelId={null}
                  selected={false}
                  selectedClassName="react-tabs__tab--selected"
                >
                  tab 1
                </Tab>
                <Tab
                  className="react-tabs__tab"
                  disabledClassName="react-tabs__tab--disabled"
                  focus={false}
                  id={null}
                  panelId={null}
                  selected={false}
                  selectedClassName="react-tabs__tab--selected"
                >
                  tab 2
                </Tab>
              </TabList>,
              <TabPanel
                className="react-tabs__tab-panel"
                forceRender={false}
                selectedClassName="react-tabs__tab-panel--selected"
              >
                <div
                  className="row"
                >
                  <Card
                    cols={8}
                  >
                    <React.Fragment>
                      <div
                        className="content"
                      >
                        <Table
                          actions={
                            Array [
                              Object {
                                "label": "Details",
                                "onClick": [Function],
                              },
                            ]
                          }
                          columns={
                            Object {
                              "created_at": Object {
                                "title": "Created at",
                              },
                              "id": Object {
                                "title": "ID",
                              },
                              "request_reason": Object {
                                "title": "Reason",
                              },
                              "status": Object {
                                "filter": [Function],
                                "title": "Status",
                              },
                            }
                          }
                          rows={
                            Array [
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 4,
                                "request_reason": "The data was incorrect.",
                                "status": "APPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:35pm",
                                "id": 5,
                                "request_reason": "The data was incorrect two.",
                                "status": "DISAPPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 6,
                                "request_reason": "The data was incorrect two three.",
                                "status": "APPROVED",
                              },
                            ]
                          }
                        />
                      </div>
                      <div
                        className="content"
                      >
                        <Paginate
                          disableInitialCallback={true}
                          initialPage={0}
                          onPageChange={[Function]}
                          pageCount={2}
                        />
                      </div>
                    </React.Fragment>
                  </Card>
                </div>
              </TabPanel>,
              <TabPanel
                className="react-tabs__tab-panel"
                forceRender={false}
                selectedClassName="react-tabs__tab-panel--selected"
              >
                <div
                  className="row"
                >
                  <Card
                    cols={8}
                  >
                    <React.Fragment>
                      <div
                        className="content"
                      >
                        <Table
                          actions={
                            Array [
                              Object {
                                "label": "Details",
                                "onClick": [Function],
                              },
                            ]
                          }
                          columns={
                            Object {
                              "created_at": Object {
                                "title": "Created at",
                              },
                              "id": Object {
                                "title": "ID",
                              },
                              "request_reason": Object {
                                "title": "Reason",
                              },
                              "status": Object {
                                "filter": [Function],
                                "title": "Status",
                              },
                            }
                          }
                          rows={
                            Array [
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 4,
                                "request_reason": "The data was incorrect.",
                                "status": "APPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:35pm",
                                "id": 5,
                                "request_reason": "The data was incorrect two.",
                                "status": "DISAPPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 6,
                                "request_reason": "The data was incorrect two three.",
                                "status": "APPROVED",
                              },
                            ]
                          }
                        />
                      </div>
                      <div
                        className="content"
                      >
                        <Paginate
                          disableInitialCallback={true}
                          initialPage={0}
                          onPageChange={[Function]}
                          pageCount={2}
                        />
                      </div>
                    </React.Fragment>
                  </Card>
                </div>
              </TabPanel>,
            ],
            "defaultFocus": false,
            "defaultIndex": null,
            "forceRenderTabPanel": false,
            "onSelect": [MockFunction],
            "selectedIndex": 0,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Tab
                    className="react-tabs__tab"
                    disabledClassName="react-tabs__tab--disabled"
                    focus={false}
                    id={null}
                    panelId={null}
                    selected={false}
                    selectedClassName="react-tabs__tab--selected"
                  >
                    tab 1
                  </Tab>,
                  <Tab
                    className="react-tabs__tab"
                    disabledClassName="react-tabs__tab--disabled"
                    focus={false}
                    id={null}
                    panelId={null}
                    selected={false}
                    selectedClassName="react-tabs__tab--selected"
                  >
                    tab 2
                  </Tab>,
                ],
                "className": "react-tabs__tab-list",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "class",
                  "props": Object {
                    "children": "tab 1",
                    "className": "react-tabs__tab",
                    "disabledClassName": "react-tabs__tab--disabled",
                    "focus": false,
                    "id": null,
                    "panelId": null,
                    "selected": false,
                    "selectedClassName": "react-tabs__tab--selected",
                  },
                  "ref": null,
                  "rendered": "tab 1",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "children": "tab 2",
                    "className": "react-tabs__tab",
                    "disabledClassName": "react-tabs__tab--disabled",
                    "focus": false,
                    "id": null,
                    "panelId": null,
                    "selected": false,
                    "selectedClassName": "react-tabs__tab--selected",
                  },
                  "ref": null,
                  "rendered": "tab 2",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <div
                  className="row"
                >
                  <Card
                    cols={8}
                  >
                    <React.Fragment>
                      <div
                        className="content"
                      >
                        <Table
                          actions={
                            Array [
                              Object {
                                "label": "Details",
                                "onClick": [Function],
                              },
                            ]
                          }
                          columns={
                            Object {
                              "created_at": Object {
                                "title": "Created at",
                              },
                              "id": Object {
                                "title": "ID",
                              },
                              "request_reason": Object {
                                "title": "Reason",
                              },
                              "status": Object {
                                "filter": [Function],
                                "title": "Status",
                              },
                            }
                          }
                          rows={
                            Array [
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 4,
                                "request_reason": "The data was incorrect.",
                                "status": "APPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:35pm",
                                "id": 5,
                                "request_reason": "The data was incorrect two.",
                                "status": "DISAPPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 6,
                                "request_reason": "The data was incorrect two three.",
                                "status": "APPROVED",
                              },
                            ]
                          }
                        />
                      </div>
                      <div
                        className="content"
                      >
                        <Paginate
                          disableInitialCallback={true}
                          initialPage={0}
                          onPageChange={[Function]}
                          pageCount={2}
                        />
                      </div>
                    </React.Fragment>
                  </Card>
                </div>,
                "className": "react-tabs__tab-panel",
                "forceRender": false,
                "selectedClassName": "react-tabs__tab-panel--selected",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Card
                    cols={8}
                  >
                    <React.Fragment>
                      <div
                        className="content"
                      >
                        <Table
                          actions={
                            Array [
                              Object {
                                "label": "Details",
                                "onClick": [Function],
                              },
                            ]
                          }
                          columns={
                            Object {
                              "created_at": Object {
                                "title": "Created at",
                              },
                              "id": Object {
                                "title": "ID",
                              },
                              "request_reason": Object {
                                "title": "Reason",
                              },
                              "status": Object {
                                "filter": [Function],
                                "title": "Status",
                              },
                            }
                          }
                          rows={
                            Array [
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 4,
                                "request_reason": "The data was incorrect.",
                                "status": "APPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:35pm",
                                "id": 5,
                                "request_reason": "The data was incorrect two.",
                                "status": "DISAPPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 6,
                                "request_reason": "The data was incorrect two three.",
                                "status": "APPROVED",
                              },
                            ]
                          }
                        />
                      </div>
                      <div
                        className="content"
                      >
                        <Paginate
                          disableInitialCallback={true}
                          initialPage={0}
                          onPageChange={[Function]}
                          pageCount={2}
                        />
                      </div>
                    </React.Fragment>
                  </Card>,
                  "className": "row",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <React.Fragment>
                      <div
                        className="content"
                      >
                        <Table
                          actions={
                            Array [
                              Object {
                                "label": "Details",
                                "onClick": [Function],
                              },
                            ]
                          }
                          columns={
                            Object {
                              "created_at": Object {
                                "title": "Created at",
                              },
                              "id": Object {
                                "title": "ID",
                              },
                              "request_reason": Object {
                                "title": "Reason",
                              },
                              "status": Object {
                                "filter": [Function],
                                "title": "Status",
                              },
                            }
                          }
                          rows={
                            Array [
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 4,
                                "request_reason": "The data was incorrect.",
                                "status": "APPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:35pm",
                                "id": 5,
                                "request_reason": "The data was incorrect two.",
                                "status": "DISAPPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 6,
                                "request_reason": "The data was incorrect two three.",
                                "status": "APPROVED",
                              },
                            ]
                          }
                        />
                      </div>
                      <div
                        className="content"
                      >
                        <Paginate
                          disableInitialCallback={true}
                          initialPage={0}
                          onPageChange={[Function]}
                          pageCount={2}
                        />
                      </div>
                    </React.Fragment>,
                    "cols": 8,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        <div
                          className="content"
                        >
                          <Table
                            actions={
                              Array [
                                Object {
                                  "label": "Details",
                                  "onClick": [Function],
                                },
                              ]
                            }
                            columns={
                              Object {
                                "created_at": Object {
                                  "title": "Created at",
                                },
                                "id": Object {
                                  "title": "ID",
                                },
                                "request_reason": Object {
                                  "title": "Reason",
                                },
                                "status": Object {
                                  "filter": [Function],
                                  "title": "Status",
                                },
                              }
                            }
                            rows={
                              Array [
                                Object {
                                  "created_at": "02/07/2018 9:31pm",
                                  "id": 4,
                                  "request_reason": "The data was incorrect.",
                                  "status": "APPROVED",
                                },
                                Object {
                                  "created_at": "02/07/2018 9:35pm",
                                  "id": 5,
                                  "request_reason": "The data was incorrect two.",
                                  "status": "DISAPPROVED",
                                },
                                Object {
                                  "created_at": "02/07/2018 9:31pm",
                                  "id": 6,
                                  "request_reason": "The data was incorrect two three.",
                                  "status": "APPROVED",
                                },
                              ]
                            }
                          />
                        </div>,
                        <div
                          className="content"
                        >
                          <Paginate
                            disableInitialCallback={true}
                            initialPage={0}
                            onPageChange={[Function]}
                            pageCount={2}
                          />
                        </div>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Table
                            actions={
                              Array [
                                Object {
                                  "label": "Details",
                                  "onClick": [Function],
                                },
                              ]
                            }
                            columns={
                              Object {
                                "created_at": Object {
                                  "title": "Created at",
                                },
                                "id": Object {
                                  "title": "ID",
                                },
                                "request_reason": Object {
                                  "title": "Reason",
                                },
                                "status": Object {
                                  "filter": [Function],
                                  "title": "Status",
                                },
                              }
                            }
                            rows={
                              Array [
                                Object {
                                  "created_at": "02/07/2018 9:31pm",
                                  "id": 4,
                                  "request_reason": "The data was incorrect.",
                                  "status": "APPROVED",
                                },
                                Object {
                                  "created_at": "02/07/2018 9:35pm",
                                  "id": 5,
                                  "request_reason": "The data was incorrect two.",
                                  "status": "DISAPPROVED",
                                },
                                Object {
                                  "created_at": "02/07/2018 9:31pm",
                                  "id": 6,
                                  "request_reason": "The data was incorrect two three.",
                                  "status": "APPROVED",
                                },
                              ]
                            }
                          />,
                          "className": "content",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "actions": Array [
                              Object {
                                "label": "Details",
                                "onClick": [Function],
                              },
                            ],
                            "columns": Object {
                              "created_at": Object {
                                "title": "Created at",
                              },
                              "id": Object {
                                "title": "ID",
                              },
                              "request_reason": Object {
                                "title": "Reason",
                              },
                              "status": Object {
                                "filter": [Function],
                                "title": "Status",
                              },
                            },
                            "rows": Array [
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 4,
                                "request_reason": "The data was incorrect.",
                                "status": "APPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:35pm",
                                "id": 5,
                                "request_reason": "The data was incorrect two.",
                                "status": "DISAPPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 6,
                                "request_reason": "The data was incorrect two three.",
                                "status": "APPROVED",
                              },
                            ],
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "div",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Paginate
                            disableInitialCallback={true}
                            initialPage={0}
                            onPageChange={[Function]}
                            pageCount={2}
                          />,
                          "className": "content",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "disableInitialCallback": true,
                            "initialPage": 0,
                            "onPageChange": [Function],
                            "pageCount": 2,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "div",
                      },
                    ],
                    "type": Symbol(react.fragment),
                  },
                  "type": [Function],
                },
                "type": "div",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <div
                  className="row"
                >
                  <Card
                    cols={8}
                  >
                    <React.Fragment>
                      <div
                        className="content"
                      >
                        <Table
                          actions={
                            Array [
                              Object {
                                "label": "Details",
                                "onClick": [Function],
                              },
                            ]
                          }
                          columns={
                            Object {
                              "created_at": Object {
                                "title": "Created at",
                              },
                              "id": Object {
                                "title": "ID",
                              },
                              "request_reason": Object {
                                "title": "Reason",
                              },
                              "status": Object {
                                "filter": [Function],
                                "title": "Status",
                              },
                            }
                          }
                          rows={
                            Array [
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 4,
                                "request_reason": "The data was incorrect.",
                                "status": "APPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:35pm",
                                "id": 5,
                                "request_reason": "The data was incorrect two.",
                                "status": "DISAPPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 6,
                                "request_reason": "The data was incorrect two three.",
                                "status": "APPROVED",
                              },
                            ]
                          }
                        />
                      </div>
                      <div
                        className="content"
                      >
                        <Paginate
                          disableInitialCallback={true}
                          initialPage={0}
                          onPageChange={[Function]}
                          pageCount={2}
                        />
                      </div>
                    </React.Fragment>
                  </Card>
                </div>,
                "className": "react-tabs__tab-panel",
                "forceRender": false,
                "selectedClassName": "react-tabs__tab-panel--selected",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Card
                    cols={8}
                  >
                    <React.Fragment>
                      <div
                        className="content"
                      >
                        <Table
                          actions={
                            Array [
                              Object {
                                "label": "Details",
                                "onClick": [Function],
                              },
                            ]
                          }
                          columns={
                            Object {
                              "created_at": Object {
                                "title": "Created at",
                              },
                              "id": Object {
                                "title": "ID",
                              },
                              "request_reason": Object {
                                "title": "Reason",
                              },
                              "status": Object {
                                "filter": [Function],
                                "title": "Status",
                              },
                            }
                          }
                          rows={
                            Array [
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 4,
                                "request_reason": "The data was incorrect.",
                                "status": "APPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:35pm",
                                "id": 5,
                                "request_reason": "The data was incorrect two.",
                                "status": "DISAPPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 6,
                                "request_reason": "The data was incorrect two three.",
                                "status": "APPROVED",
                              },
                            ]
                          }
                        />
                      </div>
                      <div
                        className="content"
                      >
                        <Paginate
                          disableInitialCallback={true}
                          initialPage={0}
                          onPageChange={[Function]}
                          pageCount={2}
                        />
                      </div>
                    </React.Fragment>
                  </Card>,
                  "className": "row",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <React.Fragment>
                      <div
                        className="content"
                      >
                        <Table
                          actions={
                            Array [
                              Object {
                                "label": "Details",
                                "onClick": [Function],
                              },
                            ]
                          }
                          columns={
                            Object {
                              "created_at": Object {
                                "title": "Created at",
                              },
                              "id": Object {
                                "title": "ID",
                              },
                              "request_reason": Object {
                                "title": "Reason",
                              },
                              "status": Object {
                                "filter": [Function],
                                "title": "Status",
                              },
                            }
                          }
                          rows={
                            Array [
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 4,
                                "request_reason": "The data was incorrect.",
                                "status": "APPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:35pm",
                                "id": 5,
                                "request_reason": "The data was incorrect two.",
                                "status": "DISAPPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 6,
                                "request_reason": "The data was incorrect two three.",
                                "status": "APPROVED",
                              },
                            ]
                          }
                        />
                      </div>
                      <div
                        className="content"
                      >
                        <Paginate
                          disableInitialCallback={true}
                          initialPage={0}
                          onPageChange={[Function]}
                          pageCount={2}
                        />
                      </div>
                    </React.Fragment>,
                    "cols": 8,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        <div
                          className="content"
                        >
                          <Table
                            actions={
                              Array [
                                Object {
                                  "label": "Details",
                                  "onClick": [Function],
                                },
                              ]
                            }
                            columns={
                              Object {
                                "created_at": Object {
                                  "title": "Created at",
                                },
                                "id": Object {
                                  "title": "ID",
                                },
                                "request_reason": Object {
                                  "title": "Reason",
                                },
                                "status": Object {
                                  "filter": [Function],
                                  "title": "Status",
                                },
                              }
                            }
                            rows={
                              Array [
                                Object {
                                  "created_at": "02/07/2018 9:31pm",
                                  "id": 4,
                                  "request_reason": "The data was incorrect.",
                                  "status": "APPROVED",
                                },
                                Object {
                                  "created_at": "02/07/2018 9:35pm",
                                  "id": 5,
                                  "request_reason": "The data was incorrect two.",
                                  "status": "DISAPPROVED",
                                },
                                Object {
                                  "created_at": "02/07/2018 9:31pm",
                                  "id": 6,
                                  "request_reason": "The data was incorrect two three.",
                                  "status": "APPROVED",
                                },
                              ]
                            }
                          />
                        </div>,
                        <div
                          className="content"
                        >
                          <Paginate
                            disableInitialCallback={true}
                            initialPage={0}
                            onPageChange={[Function]}
                            pageCount={2}
                          />
                        </div>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Table
                            actions={
                              Array [
                                Object {
                                  "label": "Details",
                                  "onClick": [Function],
                                },
                              ]
                            }
                            columns={
                              Object {
                                "created_at": Object {
                                  "title": "Created at",
                                },
                                "id": Object {
                                  "title": "ID",
                                },
                                "request_reason": Object {
                                  "title": "Reason",
                                },
                                "status": Object {
                                  "filter": [Function],
                                  "title": "Status",
                                },
                              }
                            }
                            rows={
                              Array [
                                Object {
                                  "created_at": "02/07/2018 9:31pm",
                                  "id": 4,
                                  "request_reason": "The data was incorrect.",
                                  "status": "APPROVED",
                                },
                                Object {
                                  "created_at": "02/07/2018 9:35pm",
                                  "id": 5,
                                  "request_reason": "The data was incorrect two.",
                                  "status": "DISAPPROVED",
                                },
                                Object {
                                  "created_at": "02/07/2018 9:31pm",
                                  "id": 6,
                                  "request_reason": "The data was incorrect two three.",
                                  "status": "APPROVED",
                                },
                              ]
                            }
                          />,
                          "className": "content",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "actions": Array [
                              Object {
                                "label": "Details",
                                "onClick": [Function],
                              },
                            ],
                            "columns": Object {
                              "created_at": Object {
                                "title": "Created at",
                              },
                              "id": Object {
                                "title": "ID",
                              },
                              "request_reason": Object {
                                "title": "Reason",
                              },
                              "status": Object {
                                "filter": [Function],
                                "title": "Status",
                              },
                            },
                            "rows": Array [
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 4,
                                "request_reason": "The data was incorrect.",
                                "status": "APPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:35pm",
                                "id": 5,
                                "request_reason": "The data was incorrect two.",
                                "status": "DISAPPROVED",
                              },
                              Object {
                                "created_at": "02/07/2018 9:31pm",
                                "id": 6,
                                "request_reason": "The data was incorrect two three.",
                                "status": "APPROVED",
                              },
                            ],
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "div",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Paginate
                            disableInitialCallback={true}
                            initialPage={0}
                            onPageChange={[Function]}
                            pageCount={2}
                          />,
                          "className": "content",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "disableInitialCallback": true,
                            "initialPage": 0,
                            "onPageChange": [Function],
                            "pageCount": 2,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "div",
                      },
                    ],
                    "type": Symbol(react.fragment),
                  },
                  "type": [Function],
                },
                "type": "div",
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
