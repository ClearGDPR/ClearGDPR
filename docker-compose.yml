version: '2.1'
services:
  cg:
    build: cg/.
    image: cleargdpr/cg:${VERSION:-latest}
    command: 'yarn run start-dev'
    depends_on:
      - db
    env_file:
      - cg/.env
      - cg/.controller.env
    ports:
      - '8082:8082'
      - '9230:9230'
      - '9231:9231'
    expose:
      - 9230
      - 9231
    volumes:
      - './cg/.:/opt/app'
      - /opt/app/node_modules

  cg_processor:
    build: cg/.
    image: cleargdpr/cg:${VERSION:-latest}
    command: 'yarn run start-dev'
    depends_on:
      - db
    env_file:
      - cg/.env
      - cg/.processor.env
    ports:
      - '8083:8082'
      - '9240:9230'
      - '9241:9231'
    expose:
      - 9230
      - 9231
    volumes:
      - './cg/.:/opt/app'
      - /opt/app/node_modules
  demo-api:
    image: cleargdpr/demo-api:${VERSION:-latest}
    build: api/.
    command: 'yarn run start-dev'
    depends_on:
      - db
      - cg
    env_file:
      - api/.env
    ports:
      - '8080:8080'
      - '9229:9229'
    expose:
      - 9229
    volumes:
      - './api/.:/opt/app'
      - /opt/app/node_modules
  demo-frontend:
    image: cleargdpr/demo-frontend:${VERSION:-latest}
    build: frontend/.
    command: 'npm start'
    ports:
      - '0.0.0.0:3000:3000'
      - '0.0.0.0:3001:3001'
      - '0.0.0.0:3002:3002'
    env_file:
      - frontend/.env
    volumes:
      - './frontend/.:/opt/app'
      - /opt/app/node_modules
  admin:
    image: cleargdpr/admin:${VERSION:-latest}
    build: admin/.
    command: 'yarn start'
    ports:
      - '0.0.0.0:4000:4000'
      - '0.0.0.0:4001:4001'
      - '0.0.0.0:4002:4002'
    volumes:
      - './admin/.:/opt/app'
      - /opt/app/node_modules
  db:
    build: docker/definitions/postgres
    image: cleargdpr/postgres:${VERSION:-latest}
    restart: always
    env_file:
      - docker/definitions/postgres/.env
    volumes: 
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: clear_gdpr_local
      POSTGRES_USER: clear_gdpr
    ports:
      - '5432:5432'
  adminer:
    image: adminer
    restart: always
    ports:
      - '8081:8080'

  constellation1:
    image: cleargdpr/quorum:0.0.1
    env_file: quorum/node_1/.env
    environment: 
      - SERVICE=constellation
    volumes:
      - 'quorum_data1:/qdata'
    networks:
      quorum_net:
        ipv4_address: '172.13.0.2'
  constellation2:
    image: cleargdpr/quorum:0.0.1
    env_file: quorum/node_2/.env
    environment: 
      - SERVICE=constellation
    volumes:
      - 'quorum_data2:/qdata'
    networks:
      quorum_net:
        ipv4_address: '172.13.0.3'

  geth1:
    image: cleargdpr/quorum:0.0.1
    env_file: quorum/node_1/.env
    environment: 
      - SERVICE=geth
    depends_on: 
      - constellation1
    volumes:
      - 'quorum_data1:/qdata'
    networks:
      default:
        aliases:
        - quorum1
      quorum_net:
        ipv4_address: '172.13.0.4'
    ports:
      - 22001:8545
      - 33001:8546
  geth2:
    image: cleargdpr/quorum:0.0.1
    env_file: quorum/node_2/.env
    environment: 
      - SERVICE=geth
    depends_on: 
      - constellation2
    volumes:
      - 'quorum_data2:/qdata'
    networks:
      default:
        aliases:
        - quorum2
      quorum_net:
        ipv4_address: '172.13.0.5'
    ports:
      - 22002:8545
      - 33002:8546

networks:
  quorum_net:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.13.0.0/16

# volumes for mutable storage in quorum nodes
volumes:
  db_data:
  quorum_data1:
  quorum_data2: