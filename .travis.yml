sudo: required
language: node_js
node_js:
  - '8'
cache: 
  yarn: true
  directories:
    - $HOME/.yarn_cache
before_install:
  - sudo /etc/init.d/postgresql stop
  - sudo apt-get install ncftp
  # - sudo /etc/init.d/postgresql stop
  - pip install --user awscli
  - openssl aes-256-cbc -K $encrypted_1f8d325dded8_key -iv $encrypted_1f8d325dded8_iv -in secrets.tar.enc -out secrets.tar -d
  - tar xvf secrets.tar
  - travis/restore_yarn_cache.sh
before_cache:
  - travis/prepare_yarn_cache.sh
services:
  - docker
env:
  - VERSION: $TRAVIS_TAG

stages:
  # - test
  # - publish
  - deploy
  
jobs:
  include:
    - stage: test
      script: docker/test
    - stage: publish
      if: tag =~ ^(\d*\.)+\d*$
      script:
        - touch cg/.yarn-cache.tgz admin/.yarn-cache.tgz api/.yarn-cache.tgz frontend/.yarn-cache.tgz
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - echo "Building and pushing docker images v$VERSION"
        - make -C cg build && make -C cg push
        - make -C admin dist && make -C admin build && make -C admin push
        - make -C api build && make -C api push
        - make -C frontend dist && make -C frontend build && make -C frontend push
        - make -C cg tag-latest
        - make -C admin tag-latest
        - make -C api tag-latest
        - make -C frontend tag-latest
        - VERSION=latest make -C cg push
        - VERSION=latest make -C admin push
        - VERSION=latest make -C api push
        - VERSION=latest make -C frontend push
    - stage: deploy
    #   if: tag =~ ^(\d*\.)+\d*$
      script:
        - cd website && yarn && NODE_ENV=production yarn build
        # - echo "Deploying version v$VERSION"
        # - node travis/generate-kubedef.js --quorum1
        # - "curl -X POST --data \"@kubeDef.json\" -H \"x-api-key: $LAMBDA_TOKEN\" $LAMBDA_URL"
        # - node travis/generate-kubedef.js --quorum2
        # - "curl -X POST --data \"@kubeDef.json\" -H \"x-api-key: $LAMBDA_TOKEN\" $LAMBDA_URL"
        # - node travis/generate-kubedef.js --web-app
        # - "curl -X POST --data \"@kubeDef.json\" -H \"x-api-key: $LAMBDA_TOKEN\" $LAMBDA_URL"
        - ./travis/deploy-static-sites.sh 